{"version":3,"sources":["components/app-header/app-header.js","components/app-header/index.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/app.js","components/app/index.js","index.js"],"names":["Header","styled","div","AppHeader","liked","allPosts","SearchPanel","props","state","term","onUpdateSearch","bind","event","target","value","this","setState","className","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","clazz","key","onClick","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","PostList","posts","elements","item","obj","notEmpty","id","itemProps","ListGroup","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","AppBlock","App","data","deleteItem","addItem","randId","Math","random","toString","substring","index","findIndex","elem","slice","body","rId","console","log","newItem","old","items","length","indexOf","visiblePosts","filterPost","searchPost","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8270ac6c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './app-header.css';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n    h1 {\r\n        font-size: 26px;\r\n        :hover {\r\n            color: #117a8b;\r\n        }\r\n    }\r\n    h2 {\r\n        font-size: 1.2rem;\r\n        color: grey;\r\n    }    \r\n`\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n    return (\r\n        <Header>\r\n            <h1>Roman Artemyev</h1>\r\n            <h2>{allPosts} записей, из них понравилось {liked} </h2>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import AppHeader from './app-header';\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term:''\r\n        }\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this)\r\n    }\r\n\r\n    onUpdateSearch(event) {\r\n        const term = event.target.value;\r\n        this.setState({term});\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\" \r\n                type=\"text\"\r\n                placeholder=\"Поиск по записям\"\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        )\r\n    }    \r\n}","import PostStatusFilter from './post-status-filter';\r\nexport default PostStatusFilter;","import React, {Component} from 'react';\r\nimport './post-status-filter.css';\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons = [\r\n            {name: 'all', label:'Все'},\r\n            {name: 'like', label:'Понравилось'}\r\n        ]\r\n    }\r\n    render() {\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const {filter, onFilterSelect} = this.props;\r\n            const active = filter === name;\r\n            const clazz = active ? 'btn-info' : 'btn-outline-secondary'\r\n            return(\r\n                <button \r\n                    key={name} \r\n                    type='button' \r\n                    className={`btn ${clazz}`}\r\n                    onClick={() => onFilterSelect(name)}\r\n                >{label}</button>\r\n            )\r\n        });\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}                \r\n            </div>\r\n        )\r\n    }\r\n}","import PostListItem from './post-list-item';\r\nexport default PostListItem;","import React, {Component} from 'react';\r\nimport './post-list-item.css';\r\n\r\nexport default class PostListItem extends Component {\r\n/*     constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            important: false,\r\n            like: false\r\n        };\r\n        this.onImportant = this.onImportant.bind(this);\r\n        this.onLike = this.onLike.bind(this);\r\n    }\r\n    \r\n    onImportant() {\r\n        this.setState(({important}) => ({\r\n            important:  !important\r\n        }))\r\n    }\r\n\r\n    onLike() {\r\n        this.setState(({like}) => ({\r\n            like:  !like\r\n        }))\r\n    } */\r\n\r\n    render() {\r\n        const {label, onDelete, onToggleImportant, onToggleLiked, important, like} = this.props;\r\n        // const {important, like} = this.state;\r\n        let classNames = 'app-list-item d-flex justify-content-between';\r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n        if (like) {\r\n            classNames += ' like';\r\n        }\r\n        return (\r\n            <div className={classNames}>\r\n                <span \r\n                className=\"app-list-item-label\"\r\n                onClick={onToggleLiked}>\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button \r\n                    type=\"button\"\r\n                    className=\"btn-star btn-sm\"\r\n                    onClick={onToggleImportant}>\r\n                        <i className=\"fa fa-star\"></i>\r\n                    </button>\r\n                    <button \r\n                    type=\"button\"\r\n                    className=\"btn-trash btn-sm\"\r\n                    onClick={onDelete}>\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\"></i>\r\n                </div>\r\n            </div>           \r\n        )\r\n    }\r\n}","import PostList from './post-list';\r\nexport default PostList;","import React from 'react';\r\nimport './post-list.css';\r\n\r\nimport PostListItem from '../post-list-item';\r\nimport {ListGroup} from 'reactstrap';\r\n\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\r\n\r\n    const elements = posts.map( (item) => {\r\n        if ( typeof item === 'object' && notEmpty (item) ) {\r\n            const {id, ...itemProps} = item;\r\n            return (\r\n                <li key={id} className='list-group-item'>\r\n                    <PostListItem \r\n                        {...itemProps}\r\n                        onDelete={() => onDelete(id)}\r\n                        onToggleImportant={() => onToggleImportant(id)}\r\n                        onToggleLiked={() => onToggleLiked(id)}/>\r\n                    {/* <PostListItem \r\n                    label={item.label}\r\n                    important={item.important} /> */}\r\n                </li>\r\n            )    \r\n        }\r\n        else return null;\r\n    })\r\n\r\n    function notEmpty(obj) {\r\n        for (let key in obj) \r\n        {\r\n            // если тело цикла начнет выполняться - значит в объекте есть свойства\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <ListGroup className=\"app-list list-group\">\r\n            {elements}\r\n        </ListGroup>\r\n    )\r\n}\r\n\r\nexport default PostList;","import PostAddForm from './post-add-form';\r\nexport default PostAddForm;","import React, {Component} from 'react';\r\nimport './post-add-form.css'\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onValueChange(event){\r\n        this.setState({\r\n            text: event.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(event){\r\n        event.preventDefault();\r\n        this.props.onAdd(this.state.text)\r\n        this.setState({\r\n            text: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form \r\n                className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}> \r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"О чем вы думаете сейчас?\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button \r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\">\r\n                    Добавить\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\nimport './app.css';\r\nimport styled from 'styled-components';\r\n\r\nconst AppBlock = styled.div`\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n`\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data : [\r\n                {label: 'Going to learn React', important:true, like: false, id: 'a4rd'},\r\n                {label: 'All is good', important:false, like: false, id: 'pt8u'},\r\n                {label: 'Need a break', important:false, like: false, id: 'r9y9'}\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n\r\n        this.randId = (Math.random()+1).toString(36).substring(2,6);\r\n    }\r\n    \r\n    deleteItem(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id)\r\n            /* const before = data.slice(0, index);\r\n            const after = data.slice(index + 1);\r\n            const newArr = [...before, ...after]; */\r\n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    addItem(body){\r\n            let rId = (Math.random()+1).toString(36).substring(2,6);\r\n            console.log(`Generated Id: ${rId}`);\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: this.randId = rId\r\n        }\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem];\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n    \r\n    onToggleImportant(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            \r\n            const old = data[index];\r\n            const newItem = {...old, important: !old.important};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleLiked(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            \r\n            const old = data[index];\r\n            const newItem = {...old, like: !old.like};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    searchPost(items, term) {\r\n        if (term.length === 0) {\r\n            return items\r\n        }\r\n\r\n        return items.filter( (item) => {\r\n            return item.label.indexOf(term) > -1\r\n        });\r\n    }\r\n\r\n    filterPost(items, filter) {\r\n       if (filter === 'like') {\r\n          return items.filter(item => item.like) \r\n       } else {\r\n          return items\r\n       }\r\n    }\r\n\r\n    onFilterSelect(filter) {\r\n        this.setState({filter})\r\n    }\r\n\r\n    onUpdateSearch(term) {\r\n        this.setState({term})\r\n    }\r\n\r\n    render() {\r\n        const {data, term, filter} = this.state;\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length;\r\n\r\n        const visiblePosts = this.filterPost(this.searchPost(data, term) , filter);\r\n\r\n        return(\r\n            <AppBlock>\r\n                <AppHeader\r\n                    liked={liked}\r\n                    allPosts={allPosts}/>\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel\r\n                        onUpdateSearch={this.onUpdateSearch}/>\r\n                    <PostStatusFilter\r\n                        filter={filter}\r\n                        onFilterSelect={this.onFilterSelect}/>\r\n                </div>\r\n                <PostList \r\n                    posts={visiblePosts}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLiked={this.onToggleLiked}/>\r\n                <PostAddForm\r\n                    onAdd={this.addItem}/>\r\n            </AppBlock>\r\n        )\r\n    }    \r\n}","import App from './app'\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport './index.css';\r\nimport App from './components/app';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}